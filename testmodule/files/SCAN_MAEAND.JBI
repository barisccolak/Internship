/JOB
//NAME SCAN_MAEAND
///FOLDERNAME SCAN_JOBS
//POS
///NPOS 0,0,0,0,0,0
//ALIAS
///LVARS 0,1,12,0,0,4,0,0
LI000 SPUR_SOLL
LD001 V_SCAN
LD002 X_SCAN_SHIFT
LD003 Y_SCAN_SHIFT
LD004 X_SCAN_START
LD005 Y_SCAN_START
LD006 V_MOVE
LD007 X_VERSATZ
LD008 Y_VERSATZ
LD009 X_SCAN_ENDE
LD010 Y_SCAN_ENDE
LD011 SCANZUGABE
LD012 SCANROTATION
LP000 PEND_HUB_FIRST
LP001 PEND_VERSATZ
LP002 STARTPUNKT
LP003 ENDPUNKT
//ARGINFO
///ARGTYPE P,P,P,D,D,,,
///COMMENT
STARTPUNKT
ERST.PEND.HUB
PEND.VERSATZ
SPUR_SOLL
MESSROTATION



//INST
///DATE 2021/10/18 15:11
///ATTR SC,RW
///GROUP1 RB1
///LVARS 0,3,16,0,0,4,0,0
NOP
'--------------------------------
'--------------------------------
'ARGUMENTE EINLESEN
'--------------------------------
GETARG STARTPUNKT IARG#(1)
GETARG PEND_HUB_FIRST IARG#(2)
GETARG PEND_VERSATZ IARG#(3)
GETARG SPUR_SOLL IARG#(4)
'--------------------------------
SET SCANZUGABE 10000
ADD SPUR_SOLL 1
'--------------------------------
'MOVE-Geschwindigkeit
'       [mm/s]
CALL JOB:GET_V ARGF60 ARGF"mm/s"
GETS V_MOVE $RV
'SCAN-Geschwindigkeit
'       [mm/s]
CALL JOB:GET_V ARGF20 ARGF"mm/s"
GETS V_SCAN $RV
'--------------------------------
'SCANKOORDINATEN ERZEUGEN
GETE X_SCAN_START STARTPUNKT (1)
GETE Y_SCAN_START STARTPUNKT (2)
'--------------------------------
'HALBEN PENDELHUB in
'SCAN_KOORD_SHIFT beruecksicht.
GETE X_SCAN_SHIFT PEND_HUB_FIRST (1)
GETE Y_SCAN_SHIFT PEND_HUB_FIRST (2)
DIV X_SCAN_SHIFT 2
DIV Y_SCAN_SHIFT 2
ADD X_SCAN_START X_SCAN_SHIFT
ADD Y_SCAN_START Y_SCAN_SHIFT
SETE STARTPUNKT (1) X_SCAN_START
SETE STARTPUNKT (2) Y_SCAN_START
'--------------------------------
'Scanzugabe in negativer Versatz-
'richtung beruecksichtigen
GETE X_VERSATZ PEND_VERSATZ (1)
GETE Y_VERSATZ PEND_VERSATZ (2)
IFTHENEXP X_VERSATZ<0
	 ADD X_SCAN_START SCANZUGABE
ELSEIFEXP X_VERSATZ>0
	 SUB X_SCAN_START SCANZUGABE
ELSEIFEXP Y_VERSATZ<0
	 ADD Y_SCAN_START SCANZUGABE
ELSEIFEXP Y_VERSATZ>0
	 SUB Y_SCAN_START SCANZUGABE
ENDIF
SETE STARTPUNKT (1) X_SCAN_START
SETE STARTPUNKT (2) Y_SCAN_START
'--------------------------------
'ENDPUNKT ERZEUGEN und Einzel-
'koordinaten extrahieren
SET ENDPUNKT STARTPUNKT
GETE X_SCAN_ENDE ENDPUNKT (1)
GETE Y_SCAN_ENDE ENDPUNKT (2)
'--------------------------------
'MESSWEG BERECHNEN
GETE X_VERSATZ PEND_VERSATZ (1)
MUL X_VERSATZ SPUR_SOLL
GETE Y_VERSATZ PEND_VERSATZ (2)
MUL Y_VERSATZ SPUR_SOLL
'MESSRICHTUNG ERMITTELN
IFTHENEXP X_VERSATZ<0
	 SUB X_VERSATZ SCANZUGABE
ELSEIFEXP X_VERSATZ>0
	 ADD X_VERSATZ SCANZUGABE
ELSEIFEXP Y_VERSATZ<0
	 SUB Y_VERSATZ SCANZUGABE
ELSEIFEXP Y_VERSATZ>0
	 ADD Y_VERSATZ SCANZUGABE
ENDIF
'Messweg zu Einzelkoordinate
'addieren
ADD X_SCAN_ENDE X_VERSATZ
ADD Y_SCAN_ENDE Y_VERSATZ
'Einzelkoordinaten in
'Scanendpunkt schreiben
SETE ENDPUNKT (1) X_SCAN_ENDE
SETE ENDPUNKT (2) Y_SCAN_ENDE
'--------------------------------
'--------------------------------
'Ermitteln ob eine Scanner-
'rotation erforderlin ist
IFTHENEXP X_SCAN_START=X_SCAN_ENDE
	 SET SCANROTATION -900000
ELSEIFEXP Y_SCAN_START=Y_SCAN_ENDE
	 SET SCANROTATION 0
ENDIF
SETE STARTPUNKT (6) SCANROTATION
SETE ENDPUNKT (6) SCANROTATION
'--------------------------------
'--------------------------------
'SCAN
CALL JOB:LLT ARGF1 ARGF"LASER_AUS"
TCPON TL#(1)
CALL JOB:TRIGGER ARGF"PROGRAMM_EIN"
MOVL STARTPUNKT V=V_MOVE
CALL JOB:LLT ARGF1 ARGF"TRIG_EXT"
CALL JOB:LLT ARGF1 ARGF"LASER_EIN"
CALL JOB:LLT ARGF1 ARGF"TRIG_EIN"
MOVL ENDPUNKT V=V_SCAN
CALL JOB:LLT ARGF1 ARGF"TRIG_AUS"
CALL JOB:LLT ARGF1 ARGF"TRIG_INT"
CALL JOB:LLT ARGF1 ARGF"LASER_AUS"
CALL JOB:TRIGGER ARGF"PROGRAMM_AUS"
TCPOF
END
