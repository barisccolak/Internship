/JOB
//NAME WELD_LINEAR
///FOLDERNAME WELD_JOBS
//POS
///NPOS 0,0,0,1,0,0
///USER 4
///TOOL 1
///POSTYPE USER
///RECTAN
///RCONF 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
P00100=-51.450,-41.710,12.601,0.0000,0.0000,0.0000
//ALIAS
///LVARS 0,0,9,0,0,5,0,0
LD000 V_WELD
LD001 KENNLINIE
LD002 TCP_NR
LD003 V_MOVE
LD004 HANDED_OFFSET
LD005 HANDED_ANGLE
LD006 X_DISTANCE
LD007 Y_DISTANCE
LD008 Z_ROTATION
LP000 WELD_START
LP001 WELD_END
LP002 WELD_ST_INNER
LP003 WELD_END_INNER
LP004 CALC_PKT
//ARGINFO
///ARGTYPE P,P,D,D,D,D,D,D
///COMMENT
WELD START POINT
WELD END POINT
WELD SPEED
KENNLINIE NR
TOOL NR
MOVE SPEED
HANDED ANGLE
HANDED DISTANCE
//INST
///DATE 2022/10/04 14:51
///COMM Basic Linear Weld Job
///ATTR SC,RW
///GROUP1 RB1
///LVARS 0,0,10,0,0,6,0,0
NOP
'--------------------------------
'Argumente einlesen
GETARG WELD_START IARG#(1)
GETARG WELD_END IARG#(2)
GETARG V_WELD IARG#(3)
GETARG KENNLINIE IARG#(4)
GETARG TCP_NR IARG#(5)
GETARG V_MOVE IARG#(6)
GETARG HANDED_ANGLE IARG#(7)
GETARG HANDED_OFFSET IARG#(8)
'--------------------------------
'TOOL TCP setzen
CALL JOB:SET_TCPON ARGFTCP_NR
TCPON TL#(TCP_NR)
'--------------------------------
'CALC. HANDED POINTS IF NEEDED
'AND GET DISTANCES AND ROTATIONS
IFTHENEXP HANDED_OFFSET<>0 ANDEXP HANDED_ANGLE<>0
	 SET CALC_PKT WELD_END
	 SUB CALC_PKT WELD_START
	 GETE X_DISTANCE CALC_PKT (1)
	 GETE Y_DISTANCE CALC_PKT (2)
ENDIF
'--------------------------------
'GET Z_ROTATION FROM STARTPOINT
GETE Z_ROTATION WELD_START (6)
'--------------------------------
IFTHENEXP X_DISTANCE=0 ANDEXP Y_DISTANCE>0
	 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"y" ARGFHANDED_OFFSET
	 SET WELD_ST_INNER P100
	 MUL HANDED_OFFSET -1
	 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"y" ARGFHANDED_OFFSET
	 SET WELD_END_INNER P100
	 IFTHENEXP Z_ROTATION<>0
		 IFTHENEXP Z_ROTATION<0
			 MUL HANDED_ANGLE -1
		 ENDIF
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"ry" ARGFHANDED_ANGLE
		 SET WELD_END P100
		 MUL HANDED_ANGLE -1
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"ry" ARGFHANDED_ANGLE
		 SET WELD_START P100
	 ELSE
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"rx" ARGFHANDED_ANGLE
		 SET WELD_START P100
		 MUL HANDED_ANGLE -1
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"rx" ARGFHANDED_ANGLE
		 SET WELD_END P100
	 ENDIF
ELSEIFEXP X_DISTANCE=0 ANDEXP Y_DISTANCE<0
	 MUL HANDED_OFFSET -1
	 MUL HANDED_ANGLE -1
	 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"y" ARGFHANDED_OFFSET
	 SET WELD_ST_INNER P100
	 MUL HANDED_OFFSET -1
	 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"y" ARGFHANDED_OFFSET
	 SET WELD_END_INNER P100
	 IFTHENEXP Z_ROTATION<>0
		 IFTHENEXP Z_ROTATION<0
			 MUL HANDED_ANGLE -1
		 ENDIF
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"ry" ARGFHANDED_ANGLE
		 SET WELD_END P100
		 MUL HANDED_ANGLE -1
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"ry" ARGFHANDED_ANGLE
		 SET WELD_START P100
	 ELSE
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"rx" ARGFHANDED_ANGLE
		 SET WELD_START P100
		 MUL HANDED_ANGLE -1
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"rx" ARGFHANDED_ANGLE
		 SET WELD_END P100
	 ENDIF
ELSEIFEXP Y_DISTANCE=0 ANDEXP X_DISTANCE>0
	 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"x" ARGFHANDED_OFFSET
	 SET WELD_ST_INNER P100
	 MUL HANDED_OFFSET -1
	 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"x" ARGFHANDED_OFFSET
	 SET WELD_END_INNER P100
	 IFTHENEXP Z_ROTATION<>0
		 IFTHENEXP Z_ROTATION<0
			 MUL HANDED_ANGLE -1
		 ENDIF
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"rx" ARGFHANDED_ANGLE
		 SET WELD_END P100
		 MUL HANDED_ANGLE -1
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"rx" ARGFHANDED_ANGLE
		 SET WELD_START P100
	 ELSE
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"ry" ARGFHANDED_ANGLE
		 SET WELD_END P100
		 MUL HANDED_ANGLE -1
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"ry" ARGFHANDED_ANGLE
		 SET WELD_START P100
	 ENDIF
ELSEIFEXP Y_DISTANCE=0 ANDEXP X_DISTANCE<0
	 MUL HANDED_OFFSET -1
	 MUL HANDED_ANGLE -1
	 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"x" ARGFHANDED_OFFSET
	 SET WELD_ST_INNER P100
	 MUL HANDED_OFFSET -1
	 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"x" ARGFHANDED_OFFSET
	 SET WELD_END_INNER P100
	 IFTHENEXP Z_ROTATION<>0
		 IFTHENEXP Z_ROTATION<0
			 MUL HANDED_ANGLE -1
		 ENDIF
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"rx" ARGFHANDED_ANGLE
		 SET WELD_END P100
		 MUL HANDED_ANGLE -1
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"rx" ARGFHANDED_ANGLE
		 SET WELD_START P100
	 ELSE
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_END ARGF"ry" ARGFHANDED_ANGLE
		 SET WELD_END P100
		 MUL HANDED_ANGLE -1
		 CALL JOB:SHIFT_PKT_ELEMENT ARGFWELD_START ARGF"ry" ARGFHANDED_ANGLE
		 SET WELD_START P100
	 ENDIF
ENDIF
'--------------------------------
'Zu WELD_START fahren
MOVL WELD_START V=V_MOVE
'--------------------------------
'Start TwinCAT and HDR record
CALL JOB:TRIGGER ARGF"UI_START"
TIMER T=0.10
CALL JOB:XIRIS ARGF1 ARGF"VIDEO_EIN"
TIMER T=1.00
CALL JOB:TRIGGER ARGF"SCHWEISSEN_EIN"
CALL JOB:XIRIS ARGF1 ARGF"TRIG_EIN"
'--------------------------------
'SCHWEISSEN
IFTHENEXP HANDED_OFFSET<>0 ANDEXP HANDED_ANGLE<>0
	 DOUT OT#(KENNLINIE) ON
	 ARCON ASF#(KENNLINIE)
	 MOVL WELD_ST_INNER V=V_WELD
	 MOVL WELD_END_INNER V=V_WELD
	 MOVL WELD_END V=V_WELD
	 ARCOF AEF#(KENNLINIE)
	 DOUT OT#(KENNLINIE) OFF
ELSE
	 DOUT OT#(KENNLINIE) ON
	 ARCON ASF#(KENNLINIE)
	 MOVL WELD_END V=V_WELD
	 ARCOF AEF#(KENNLINIE)
	 DOUT OT#(KENNLINIE) OFF
ENDIF
'--------------------------------
'Stop TwinCAT and HDR record
CALL JOB:XIRIS ARGF1 ARGF"TRIG_AUS"
CALL JOB:TRIGGER ARGF"SCHWEISSEN_AUS"
TIMER T=1.00
CALL JOB:XIRIS ARGF1 ARGF"VIDEO_AUS"
CALL JOB:TRIGGER ARGF"UI_STOP"
'--------------------------------
'ENDE
TCPOF
END
