/JOB
//NAME EXPORT_DOUBLE_TO_TC4
///FOLDERNAME TWINCAT_KOMMUNIKATION
//POS
///NPOS 0,0,0,0,0,0
//ALIAS
///LVARS 1,7,2,0,0,0,0,0
LB000 WERTEBEREICH
LI000 TARGET_REG1
LI001 TARGET_REG2
LI002 VAL_REG1_HIGH
LI003 VAL_REG1_LOW
LI004 BIT_COUNT
LI005 VAL_REG2_HIGH
LI006 VAL_REG2_LOW
LD000 INPUT_VALUE
LD001 CALC_VALUE
//ARGINFO
///ARGTYPE D,I,I,,,,,
///COMMENT
INPUT_VALUE
TARGET_REG2
TARGET_REG1





//INST
///DATE 2020/06/23 14:19
///ATTR SC,RW
///LVARS 1,7,2,0,1,0,0,0
NOP
'--------------------------------
'Dieser Job teilt den eigegebe-
'nen INPUT_VALUE auf die INTEGER
'VAL_REG1_HIGH und VAL_REG1_LOW
'auf und schreibt diese in die
'Register TARGET_REG2 und
'TARGET_REG1
'--------------------------------
'--------------------------------
'Einlesen der Argumente
'--------------------------------
GETARG INPUT_VALUE IARG#(1)
GETARG TARGET_REG1 IARG#(2)
GETARG TARGET_REG2 IARG#(3)
'--------------------------------
'VAL_REG1_HIGH und VAL_REG1_LOW
'auf null setzen um neu schreiben
'zu können
SET VAL_REG1_HIGH 0
SET VAL_REG1_LOW 0
SET VAL_REG2_HIGH 0
SET VAL_REG2_LOW 0
'--------------------------------
SET CALC_VALUE INPUT_VALUE
'--------------------------------
'Wenn input negativ Betrag bilden
'zur Erleichterung der
'IFTHENELSE-Abfragen
'zusätzlich Setzen des höchsten
'Bit's num Negieren der Bytezahl
IFTHENEXP INPUT_VALUE<0
	 SET CALC_VALUE  EXPRESS 2147483647 + 1 + CALC_VALUE
	 ADD VAL_REG2_HIGH 128
ENDIF
'--------------------------------
'Falls CALC_VALUE > 32767
'Wertebereich überschritten
'WERTEBEREICH(RETOURWET)=0
'und Fehlermelung
IFTHENEXP CALC_VALUE>2147483647
	 MSG "Wertebereich ueberschritten!"
	 SET WERTEBEREICH 0
ELSE
	'--------------------------------
	'IFTHENELSE-Abfragen zum schreibe
	'von VAL_REG1_HIGH, VAL_REG1_LOW,
	'VAL_REG2_HIGH und VAL_REG2_LOW
	 FOR BIT_COUNT START= 1 TO 32
		 IFTHENEXP CALC_VALUE>=1073741824
			 ADD VAL_REG2_HIGH 64
			 SUB CALC_VALUE 1073741824
		 ELSEIFEXP CALC_VALUE>=536870912
			 ADD VAL_REG2_HIGH 32
			 SUB CALC_VALUE 536870912
		 ELSEIFEXP CALC_VALUE>=268435456
			 ADD VAL_REG2_HIGH 16
			 SUB CALC_VALUE 268435456
		 ELSEIFEXP CALC_VALUE>=134217728
			 ADD VAL_REG2_HIGH 8
			 SUB CALC_VALUE 134217728
		 ELSEIFEXP CALC_VALUE>=67108864
			 ADD VAL_REG2_HIGH 4
			 SUB CALC_VALUE 67108864
		 ELSEIFEXP CALC_VALUE>=33554432
			 ADD VAL_REG2_HIGH 2
			 SUB CALC_VALUE 33554432
		 ELSEIFEXP CALC_VALUE>=16777216
			 ADD VAL_REG2_HIGH 1
			 SUB CALC_VALUE 16777216
		 ELSEIFEXP CALC_VALUE>=8388608
			 ADD VAL_REG2_LOW 128
			 SUB CALC_VALUE 8388608
		 ELSEIFEXP CALC_VALUE>=4194304
			 ADD VAL_REG2_LOW 64
			 SUB CALC_VALUE 4194304
		 ELSEIFEXP CALC_VALUE>=2097152
			 ADD VAL_REG2_LOW 32
			 SUB CALC_VALUE 2097152
		 ELSEIFEXP CALC_VALUE>=1048576
			 ADD VAL_REG2_LOW 16
			 SUB CALC_VALUE 1048576
		 ELSEIFEXP CALC_VALUE>=524288
			 ADD VAL_REG2_LOW 8
			 SUB CALC_VALUE 524288
		 ELSEIFEXP CALC_VALUE>=262144
			 ADD VAL_REG2_LOW 4
			 SUB CALC_VALUE 262144
		 ELSEIFEXP CALC_VALUE>=131072
			 ADD VAL_REG2_LOW 2
			 SUB CALC_VALUE 131072
		 ELSEIFEXP CALC_VALUE>=65536
			 ADD VAL_REG2_LOW 1
			 SUB CALC_VALUE 65536
		 ELSEIFEXP CALC_VALUE>=32768
			 ADD VAL_REG1_HIGH 128
			 SUB CALC_VALUE 32768
		 ELSEIFEXP CALC_VALUE>=16384
			 ADD VAL_REG1_HIGH 64
			 SUB CALC_VALUE 16384
		 ELSEIFEXP CALC_VALUE>=8192
			 ADD VAL_REG1_HIGH 32
			 SUB CALC_VALUE 8192
		 ELSEIFEXP CALC_VALUE>=4096
			 ADD VAL_REG1_HIGH 16
			 SUB CALC_VALUE 4096
		 ELSEIFEXP CALC_VALUE>=2048
			 ADD VAL_REG1_HIGH 8
			 SUB CALC_VALUE 2048
		 ELSEIFEXP CALC_VALUE>=1024
			 ADD VAL_REG1_HIGH 4
			 SUB CALC_VALUE 1024
		 ELSEIFEXP CALC_VALUE>=512
			 ADD VAL_REG1_HIGH 2
			 SUB CALC_VALUE 512
		 ELSEIFEXP CALC_VALUE>=256
			 ADD VAL_REG1_HIGH 1
			 SUB CALC_VALUE 256
		 ELSEIFEXP CALC_VALUE>=128
			 ADD VAL_REG1_LOW 128
			 SUB CALC_VALUE 128
		 ELSEIFEXP CALC_VALUE>=64
			 ADD VAL_REG1_LOW 64
			 SUB CALC_VALUE 64
		 ELSEIFEXP CALC_VALUE>=32
			 ADD VAL_REG1_LOW 32
			 SUB CALC_VALUE 32
		 ELSEIFEXP CALC_VALUE>=16
			 ADD VAL_REG1_LOW 16
			 SUB CALC_VALUE 16
		 ELSEIFEXP CALC_VALUE>=8
			 ADD VAL_REG1_LOW 8
			 SUB CALC_VALUE 8
		 ELSEIFEXP CALC_VALUE>=4
			 ADD VAL_REG1_LOW 4
			 SUB CALC_VALUE 4
		 ELSEIFEXP CALC_VALUE>=2
			 ADD VAL_REG1_LOW 2
			 SUB CALC_VALUE 2
		 ELSEIFEXP CALC_VALUE>=1
			 ADD VAL_REG1_LOW 1
			 SUB CALC_VALUE 1
		 ENDIF
	 NEXT BIT_COUNT
	 SET WERTEBEREICH 1
ENDIF
SETREG MREG#(TARGET_REG1) HIGH VAL_REG1_HIGH
SETREG MREG#(TARGET_REG1) LOW VAL_REG1_LOW
SETREG MREG#(TARGET_REG2) HIGH VAL_REG2_HIGH
SETREG MREG#(TARGET_REG2) LOW VAL_REG2_LOW
RET WERTEBEREICH
END
